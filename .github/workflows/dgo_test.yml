name: Dgo Test
on: [push, pull_request]
jobs:

  test:
    name: Test Linux
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Test
      run: go test -tags test -v -covermode=atomic -coverpkg=./... -coverprofile coverage.tmp ./...

    - name: Set up GolangCI-Lint
      run: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- latest

    - name: Lint
      run: ./bin/golangci-lint run ./...

    - name: Test Coverage Check
      run: |
        COV=$(go tool cover -func=coverage.tmp | grep -e '^total:\s*(statements)' | awk '{ print $3 }')
        test $COV = '100.0%' || (echo "Expected 100% test coverage, got $COV" && exit 1)

    - name: Send coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        go get github.com/mattn/goveralls@master
        $(go env GOPATH)/bin/goveralls -tags=test -coverprofile=coverage.tmp -service=github

  test-windows:
    name: Test Windows
    runs-on: windows-latest
    steps:

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Test
        run: go test -tags test -v ./...
